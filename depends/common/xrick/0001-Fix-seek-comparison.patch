From a3e583c1688dc9cec6dd16d3c361873dccf7e341 Mon Sep 17 00:00:00 2001
From: Garrett Brown <themagnificentmrb@gmail.com>
Date: Thu, 7 Dec 2023 19:33:27 -0800
Subject: [PATCH] Fix seek comparison

The libretro documentation for seek states:

  Set the current read/write position for the file. Returns the new position,
  -1 for error.

The seek function in xrick expects either 0 or -1, however it should expect a
new position instead of 0, so adapt the comparisons of seek results.
---
 src/unzip.c | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/src/unzip.c b/src/unzip.c
index 6a16068..a1e6fb4 100644
--- a/src/unzip.c
+++ b/src/unzip.c
@@ -298,7 +298,7 @@ static uLong unzlocal_SearchCentralDir(RFILE *fin)
 
       uReadSize = ((BUFREADCOMMENT+4) < (uSizeFile-uReadPos)) ?
          (BUFREADCOMMENT+4) : (uSizeFile-uReadPos);
-      if (rfseek(fin,uReadPos,SEEK_SET)!=0)
+      if (rfseek(fin,uReadPos,SEEK_SET) < 0)
          break;
 
       if (rfread(buf,(uInt)uReadSize,1,fin)!=1)
@@ -357,7 +357,7 @@ unzFile unzOpen (const char *path)
    if (central_pos==0)
       err=UNZ_ERRNO;
 
-   if (rfseek(fin,central_pos,SEEK_SET)!=0)
+   if (rfseek(fin,central_pos,SEEK_SET) < 0)
       err=UNZ_ERRNO;
 
    /* the signature, already checked */
@@ -497,7 +497,7 @@ static int unzlocal_GetCurrentFileInfoInternal (
    if (file==NULL)
       return UNZ_PARAMERROR;
    s=(unz_s*)file;
-   if (rfseek(s->file,s->pos_in_central_dir+s->byte_before_the_zipfile,SEEK_SET)!=0)
+   if (rfseek(s->file,s->pos_in_central_dir+s->byte_before_the_zipfile,SEEK_SET) < 0)
       err=UNZ_ERRNO;
 
 
@@ -586,7 +586,7 @@ static int unzlocal_GetCurrentFileInfoInternal (
 
       if (lSeek!=0)
       {
-         if (rfseek(s->file,lSeek,SEEK_CUR)==0)
+         if (rfseek(s->file,lSeek,SEEK_CUR) >= 0)
             lSeek=0;
          else
             err=UNZ_ERRNO;
@@ -613,7 +613,7 @@ static int unzlocal_GetCurrentFileInfoInternal (
 
       if (lSeek!=0)
       {
-         if (rfseek(s->file,lSeek,SEEK_CUR)==0)
+         if (rfseek(s->file,lSeek,SEEK_CUR) >= 0)
             lSeek=0;
          else
             err=UNZ_ERRNO;
@@ -782,7 +782,7 @@ static int unzlocal_CheckCurrentFileCoherencyHeader (
 	*psize_local_extrafield = 0;
 
 	if (rfseek(s->file,s->cur_file_info_internal.offset_curfile +
-								s->byte_before_the_zipfile,SEEK_SET)!=0)
+								s->byte_before_the_zipfile,SEEK_SET) <= 0)
 		return UNZ_ERRNO;
 
 
@@ -998,7 +998,7 @@ int unzReadCurrentFile  (unzFile file, void *buf, unsigned len)
 				return UNZ_EOF;
 			if (rfseek(pfile_in_zip_read_info->file,
                       pfile_in_zip_read_info->pos_in_zipfile +
-                         pfile_in_zip_read_info->byte_before_the_zipfile,SEEK_SET)!=0)
+                         pfile_in_zip_read_info->byte_before_the_zipfile,SEEK_SET) <= 0)
 				return UNZ_ERRNO;
 			if (rfread(pfile_in_zip_read_info->read_buffer,uReadThis,1,
                          pfile_in_zip_read_info->file)!=1)
-- 
2.34.1

